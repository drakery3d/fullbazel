apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
spec:
  selector:
    matchLabels:
      app: server
  replicas: 2
  template:
    metadata:
      labels:
        app: server
    spec:
      serviceAccountName: cloudsql-service-account
      containers:
        - name: server
          image: server:latest
          envFrom:
            - secretRef:
                name: application-config
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            requests:
              memory: 300Mi
              cpu: 50m
            limits:
              memory: 1000Mi
              cpu: 500m

        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.20.2
          env:
            - name: CLOUDSQL_INSTANCE
              valueFrom:
                secretKeyRef:
                  name: application-config
                  key: CLOUDSQL_INSTANCE
          command:
            - '/cloud_sql_proxy'
            # Terraform creates the cloud sql instance and stores the connection
            # information in a kubernetes secret
            # We read the instance name from this secret and pass it to the
            # cloud_sql_proxy command here:
            - '-instances=$(CLOUDSQL_INSTANCE)=tcp:3306'
          securityContext:
            runAsNonRoot: true

      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: cloud.google.com/gke-preemptible
                    operator: Exists
              weight: 100

---
apiVersion: v1
kind: Service
metadata:
  name: server
spec:
  selector:
    app: server
  ports:
    - name: ws
      port: 3000
      targetPort: 3000
  type: NodePort

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: server
spec:
  scaleTargetRef:
    apiVersion: apps/v1beta1
    kind: Deployment
    name: server
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 75
